{"ast":null,"code":"var _jsxFileName = \"/Users/nguyennghia/Documents/Github/project-reactjs-quiz-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // components\n\nimport QuestionCard from './components/QuestionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUerAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {};\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startTrivia,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n      questionNr: number + 1,\n      totalQuestions: TOTAL_QUESTIONS,\n      question: questions[number].question,\n      answers: questions[number].answers,\n      userAnswer: userAnswers ? userAnswers[number] : undefined,\n      callback: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: nextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3N1t29XYeiberCVLu9W1fVkCf30=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nguyennghia/Documents/Github/project-reactjs-quiz-app/src/App.tsx"],"names":["React","useState","QuestionCard","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUerAnswers","score","setScore","gameOver","setGameOver","startTrivia","checkAnswer","e","nextQuestion","question","answers","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,eAAe,GAAI,EAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAWC,UAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAaC,YAAb,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACQ,MAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACU,WAAD,EAAeC,aAAf,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,KAAD,EAASC,QAAT,IAAqBb,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAACc,QAAD,EAAYC,WAAZ,IAA2Bf,QAAQ,CAAC,IAAD,CAAzC;;AAEA,QAAMgB,WAAW,GAAG,YAAY,CAE/B,CAFD;;AAGA,QAAMC,WAAW,GAAIC,CAAD,IAA2C,CAE9D,CAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAEH,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,YAAD;AACE,MAAA,UAAU,EAAER,MAAM,GAAG,CADvB;AAEE,MAAA,cAAc,EAAIN,eAFpB;AAGE,MAAA,QAAQ,EAAII,SAAS,CAACE,MAAD,CAAT,CAAkBY,QAHhC;AAIE,MAAA,OAAO,EAAId,SAAS,CAACE,MAAD,CAAT,CAAkBa,OAJ/B;AAKE,MAAA,UAAU,EAAIX,WAAW,GAAGA,WAAW,CAACF,MAAD,CAAd,GAAyBc,SALpD;AAME,MAAA,QAAQ,EAAIL;AANd;AAAA;AAAA;AAAA;AAAA,YAPF,eAeE;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAIE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtCD;;GAAMhB,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n// components\nimport QuestionCard from './components/QuestionCard';\n\nconst TOTAL_QUESTIONS  = 10;\n\nconst App = () => {\n  const [loading , setLoading ] = useState(false);\n  const [questions , setQuestions] = useState([]);\n  const [number , setNumber] = useState(0);\n  const [userAnswers , setUerAnswers] = useState([]);\n  const [score , setScore] = useState(0);\n  const [gameOver , setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n\n  }\n  const checkAnswer = (e:React.MouseEvent<HTMLButtonElement>) => {\n\n  }\n  const nextQuestion = () => {\n\n  }\n  return (\n    <div>\n      <h1>React Quiz</h1>\n      <button className='start' onClick={startTrivia}>\n        Start  \n      </button>\n      <p className='score'>Score: </p>\n      <p>Loading Questions ... </p>\n      <QuestionCard \n        questionNr={number + 1}\n        totalQuestions = {TOTAL_QUESTIONS}\n        question = {questions[number].question}\n        answers = {questions[number].answers}\n        userAnswer = {userAnswers ? userAnswers[number] : undefined}\n        callback = {checkAnswer}\n      />\n      <button className='next' onClick = {nextQuestion}>\n        Next Question\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}